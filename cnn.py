# -*- coding: utf-8 -*-
"""cnn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tJEGi2FedHSAlsztcHI2MOKIXhngh2Ct

cnn is supervised learning
cnn we have weight parameters along with keranl parameters.
"""

from keras.datasets import mnist #labelled datasets -mnist

from keras.layers import Dense, Flatten, Conv2D, MaxPooling2D
from keras.models import Sequential

import matplotlib.pyplot as plt

(train_images,train_labels),(test_images,test_labels)=mnist.load_data()

train_images.shape

test_images.shape

plt.imshow(train_images[1])

train_labels[1]

plt.imshow(test_images[2])

test_labels[2]

train_images, test_images = train_images/255.0, test_images/255.0

import numpy as np

from keras.utils import to_categorical

train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)

train_labels[1]

test_labels[1]

cnnmodel = Sequential()

cnnmodel.add(Conv2D(32,(3,3),activation='relu',input_shape=(28,28,1)))
cnnmodel.add(MaxPooling2D(2,2))
cnnmodel.add(Conv2D(64,(3,3),activation='relu'))
cnnmodel.add(Flatten())
cnnmodel.add(Dense(10,activation='softmax'))

cnnmodel.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

cnnmodel.fit(train_images,train_labels,epochs = 3)

predictions=cnnmodel.predict(test_images)

for i in range(3):
  print(predictions[i])
  print(test_labels[i])

